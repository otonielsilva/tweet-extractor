name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven 
      run: ./mvnw compile
  code-analysis:
      runs-on: ubuntu-latest
      needs: compile
      steps: 
      - uses: actions/checkout@v2
      - name: SonarCloud Scan        
        run: ./mvnw verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish: 
    runs-on: ubuntu-latest
    needs: [compile, code-analysis]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven 
      run: ./mvnw package             
    - name: Publish in Docker Hub
      uses: elgohr/Publish-Docker-Github-Action@master  
      with:
        name: otonielsilva/tweet-extractor
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        buildargs: JAR_FILE=tweet_extractor.jar
  deploy:
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@v2
      - uses: okteto/actions/login@master
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
      - name: Get Kubeconfig
        uses: okteto/actions/namespace@master
        id: namespace
        with:
          token: ${{ secrets.OKTETO_TOKEN }}
          namespace: otonielsilva
      - name: Deploy and Wait
        uses: okteto/actions/deploy@master
        env:
          KUBECONFIG: ${{ steps.namespace.outputs.kubeconfig }}
        with:
          namespace: otonielsilva
          manifest: kube/app.yml
          tag: ${{ secrets.DOCKER_USERNAME }}/tweet-extractor:latest
          waitOn: deployment/tweet-extractor
